[HEADER]
	VERSION		01.00.00.00
	DESCRIPTION Texture layering examples
	COPYRIGHT	(c) 2013 The Brenwill Workshop Ltd. All rights reserved.
[/HEADER]

[TEXTURES] 
	FILE basetex 	BrushedSteel.png	LINEAR-LINEAR-LINEAR REPEAT-REPEAT
	FILE reflection Reflection.png		LINEAR-LINEAR-LINEAR REPEAT-REPEAT
	FILE BaseTex 	BaseTex.png			LINEAR-LINEAR-LINEAR REPEAT-REPEAT
	FILE NormalMap	NormalMap.png		LINEAR-LINEAR-LINEAR REPEAT-REPEAT
[/TEXTURES]

 // Reflective effect --------------------
 [EFFECT]
	 NAME 	ReflectiveEffect
	 
	 // UNIFORM						PVR Semantic
	 UNIFORM WorldViewIT		WORLDVIEWIT
	 UNIFORM WVPMatrix 			WORLDVIEWPROJECTION
	 UNIFORM LightDirection		LIGHTDIREYE
	 UNIFORM sBaseTex			TEXTURE0
	 UNIFORM sEnvMap			TEXTURE1
	 UNIFORM CustomMatrix		MYCUSTOMSCALE
	 
	 // ATTRIBUTE				PVR Semantic
	 ATTRIBUTE inVertex			POSITION
	 ATTRIBUTE inNormal			NORMAL
	 ATTRIBUTE inTexCoord		UV
	 
	 VERTEXSHADER				ReflectVertexShader
	 FRAGMENTSHADER				ReflectFragmentShader
	 TEXTURE 0					basetex
	 TEXTURE 1					reflection
 [/EFFECT]

[VERTEXSHADER]
	NAME 		ReflectVertexShader

	// LOAD GLSL AS CODE
	[GLSL_CODE]
		attribute highp   vec4  inVertex;
		attribute mediump vec3  inNormal;
		attribute mediump vec2  inTexCoord;

		uniform highp   mat4  WVPMatrix;
		uniform mediump mat3  WorldViewIT;
		uniform mediump vec3  LightDirection;
		uniform highp   mat4  CustomMatrix;

		varying lowp    float  DiffuseIntensity;
		varying mediump vec2   TexCoord;
		varying mediump vec2   EnvMapCoord;

		void main()
		{
			gl_Position = WVPMatrix * CustomMatrix * inVertex;
			mediump vec3 transNormal = normalize(WorldViewIT * inNormal);
			DiffuseIntensity = 0.5 + dot(transNormal, normalize(LightDirection)) * 0.5;
			TexCoord = inTexCoord;
			EnvMapCoord = 0.5 + transNormal.xy * 0.5;
		}
	[/GLSL_CODE]
[/VERTEXSHADER]
    
[FRAGMENTSHADER] 
	NAME 		ReflectFragmentShader

	// LOAD GLSL AS CODE
	[GLSL_CODE]
		uniform sampler2D  sBaseTex;
		uniform sampler2D  sEnvMap;
		
		varying lowp    float  DiffuseIntensity;
		varying mediump vec2   TexCoord;
		varying mediump vec2   EnvMapCoord;

		void main()
		{
			lowp vec3 envColor = 0.5 * texture2D(sEnvMap, EnvMapCoord).rgb;
			gl_FragColor.rgb = texture2D(sBaseTex, TexCoord).rgb * (DiffuseIntensity + envColor);
			gl_FragColor.a = 1.0;
		}
	[/GLSL_CODE]
[/FRAGMENTSHADER]
 
 
// Bump mapping effect --------------------
[EFFECT]
	NAME 	EtchedEffect
	 
	// UNIFORM					PVR Semantic
	UNIFORM MVPMatrix 			WORLDVIEWPROJECTION
	UNIFORM LightDirModel		LIGHTDIRMODEL
	UNIFORM sBaseTex			TEXTURE0
	UNIFORM sNormalMap			TEXTURE1
	 
	// ATTRIBUTE				PVR Semantic
	ATTRIBUTE inVertex			POSITION
	ATTRIBUTE inNormal			NORMAL
	ATTRIBUTE inTexCoord		UV
	ATTRIBUTE inTangent			TANGENT
	 
	VERTEXSHADER				BumpMapVertexShader
	FRAGMENTSHADER				BumpMapFragmentShader
	TEXTURE 1					NormalMap
	TEXTURE 0					BaseTex
[/EFFECT]
 
[VERTEXSHADER]
	NAME 		BumpMapVertexShader
	FILE		BumpMap.vsh
[/VERTEXSHADER]
 
[FRAGMENTSHADER]
	NAME 		BumpMapFragmentShader
	FILE		BumpMap.fsh
[/FRAGMENTSHADER]

